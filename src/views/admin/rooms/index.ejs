<body>
  <div class="app-container">
    <!-- Main Content -->
    <main class="content-wrapper">
      <div class="content-header">
        <h1>Products</h1>
        <a href="/admin/rooms/create" class="btn btn-primary">
          <i class="fas fa-plus"></i> Add New
        </a>
      </div>

      <!-- Filter Bar -->
      <div class="filter-bar">
        <form id="filterForm" class="filter-form" novalidate>
          <div class="form-group">
            <label for="filterName">Name</label>
            <input
              type="text"
              id="filterName"
              class="form-control"
              placeholder="Search items..."
            />
            <span class="error-text" id="filterNameError"
              >Please enter a valid name.</span
            >
          </div>

          <div class="form-group">
            <label for="filterCategory">Category</label>
            <select id="filterCategory" class="form-control">
              <option value="">All Categories</option>
              <option value="electronics">Electronics</option>
              <option value="clothing">Clothing</option>
              <option value="food">Food</option>
              <option value="books">Books</option>
            </select>
            <span class="error-text" id="filterCategoryError"
              >Please select a valid category.</span
            >
          </div>

          <div class="form-group">
            <label for="filterStatus">Status</label>
            <select id="filterStatus" class="form-control">
              <option value="">All Statuses</option>
              <option value="active">Active</option>
              <option value="low">Low</option>
              <option value="inactive">Inactive</option>
            </select>
            <span class="error-text" id="filterStatusError"
              >Please select a valid status.</span
            >
          </div>

          <div class="form-group filter-actions">
            <button type="submit" class="btn btn-primary">
              <i class="fas fa-filter"></i> Filter
            </button>
            <button
              type="button"
              id="resetFilters"
              class="btn btn-secondary"
              style="margin-left: 10px"
            >
              <i class="fas fa-times"></i> Reset
            </button>
          </div>
        </form>
      </div>

      <!-- Data Table -->
      <div class="table-container">
        <table class="data-table">
          <thead>
            <tr>
              <th>Rooms</th>
              <th>Bedrooms</th>
              <th>Price</th>
              <th>Location</th>
              <th>Rating</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <!-- Item rows -->

            <% for(let room of rooms){ %>
            <tr data-id="1">
              <td>
                <div style="display: flex; align-items: center">
                  <img
                    src="https://via.placeholder.com/50"
                    alt="<%= room.title %>"
                    class="item-image"
                  />
                  <div style="margin-left: 15px">
                    <div class="item-title"><%= room.title %></div>
                    <div class="item-subtitle"><%= room.location %></div>
                  </div>
                </div>
              </td>
              <td><%= room.bedrooms%></td>
              <td class="item-value"><%= room.price %></td>
              <td><%= room.location %></td>
              <td>
                <span class="badge badge-success"><%= room.rating %></span>
              </td>
              <td>
                <div class="action-buttons">
                  <a
                    href="/admin/rooms/<%= room.id %>"
                    class="action-btn view"
                    title="View"
                  >
                    <i class="fas fa-eye"></i>
                  </a>
                  <a
                    href="/admin/rooms/<%= room.id%>/edit"
                    class="action-btn edit"
                    title="Edit"
                  >
                    <i class="fas fa-edit"></i>
                  </a>
                  <a
                    href="#"
                    class="action-btn delete delete-item"
                    title="Delete"
                    data-id="1"
                    data-name="Wireless Headphones"
                  >
                    <i class="fas fa-trash"></i>
                  </a>
                </div>
              </td>
            </tr>
            <% } %>
          </tbody>
        </table>

        <!-- Pagination -->
        <div class="pagination-container">
          <div class="pagination-info">Showing 1-6 of 56 items</div>
          <ul class="pagination">
            <li class="active">
              <a href="#" data-page="1">1</a>
            </li>
            <li><a href="#" data-page="2">2</a></li>
            <li><a href="#" data-page="3">3</a></li>
            <li><a href="#" data-page="4">4</a></li>
            <li><a href="#" data-page="5">5</a></li>
            <li><a href="#" data-page="6">6</a></li>
          </ul>
        </div>
      </div>
    </main>
  </div>

  <!-- Confirm Dialog -->
  <div class="modal" id="confirmDeleteModal">
    <div class="modal-content">
      <h3 class="modal-title">Confirm Delete</h3>
      <div class="modal-body">
        Are you sure you want to delete "<span id="deleteItemName"></span>"?
        This action cannot be undone.
      </div>
      <div class="modal-footer">
        <button
          type="button"
          id="cancelDelete"
          class="btn btn-secondary"
          data-cancel
        >
          Cancel
        </button>
        <button
          type="button"
          id="confirmDelete"
          class="btn btn-danger"
          data-confirm
        >
          Delete
        </button>
      </div>
    </div>
  </div>

  <script src="assets/js/common.js"></script>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      // Initialize form validation
      initFormValidation("filterForm");

      // Setup filter form
      const filterForm = document.getElementById("filterForm");
      filterForm.addEventListener("submit", function (event) {
        event.preventDefault();

        if (validateForm("filterForm")) {
          // Get filter values
          const name = document.getElementById("filterName").value;
          const category = document.getElementById("filterCategory").value;
          const status = document.getElementById("filterStatus").value;

          // Filter items (in a real application, this would likely be an API call)
          console.log("Filtering with:", {
            name,
            category,
            status,
          });

          // Show success message
          showMessage(
            "filterSuccess",
            `Applied filters: Name="${name}", Category="${category}", Status="${status}"`,
            3000
          );
        }
      });

      // Reset filters
      document
        .getElementById("resetFilters")
        .addEventListener("click", function () {
          resetForm("filterForm");
        });

      // Validate alphanumeric input
      document.getElementById("filterName").addEventListener(
        "input",
        debounce(function () {
          const input = this;
          const value = input.value.trim();

          // Only validate if there's a value (the field is not required)
          if (value !== "" && !/^[a-zA-Z0-9\s]+$/.test(value)) {
            document.getElementById("filterNameError").style.display = "block";
            document.getElementById("filterNameError").textContent =
              "Name can only contain letters, numbers, and spaces.";
            input.classList.add("error");
          } else {
            document.getElementById("filterNameError").style.display = "none";
            input.classList.remove("error");
          }
        }, 300)
      );

      // Setup pagination
      const paginationLinks = document.querySelectorAll(".pagination li a");
      paginationLinks.forEach((link) => {
        link.addEventListener("click", function (e) {
          e.preventDefault();

          // Remove active class from all links
          paginationLinks.forEach((l) =>
            l.parentElement.classList.remove("active")
          );

          // Add active class to clicked link
          this.parentElement.classList.add("active");

          // Get page number
          const page = this.getAttribute("data-page");

          // Update pagination info
          document.querySelector(".pagination-info").textContent = `Showing ${
            (page - 1) * 10 + 1
          }-${Math.min(page * 10, 56)} of 56 items`;
        });
      });

      // Setup delete confirmation
      const deleteButtons = document.querySelectorAll(".delete-item");
      deleteButtons.forEach((button) => {
        button.addEventListener("click", async function (e) {
          e.preventDefault();

          const itemId = this.getAttribute("data-id");
          const itemName = this.getAttribute("data-name");

          // Set item name in modal
          document.getElementById("deleteItemName").textContent = itemName;

          // Show confirmation dialog
          const result = await showConfirmDialog("confirmDeleteModal", {
            title: "Confirm Delete",
            message: `Are you sure you want to delete "${itemName}"? This action cannot be undone.`,
          });

          if (result) {
            // Delete the item (in a real application, this would likely be an API call)
            console.log(`Deleting item with ID: ${itemId}`);

            // Remove item from table
            const itemRow = document.querySelector(`tr[data-id="${itemId}"]`);
            if (itemRow) {
              itemRow.remove();
            }
          }
        });
      });
    });
  </script>
</body>
