
  <body>
    <div class="reset-password-container">
      <div class="logo">
        <h1>Reset Password</h1>
      </div>

      <div id="successMessage" class="form-message success">
        <i class="fas fa-check-circle"></i> Your password has been reset
        successfully.
      </div>

      <div id="errorMessage" class="form-message error">
        <i class="fas fa-exclamation-circle"></i>
        <span id="errorText">Something went wrong, please try again.</span>
      </div>

      <form id="resetPasswordForm" novalidate>
        <div class="form-group">
          <label for="newPassword">New Password</label>
          <input
            type="password"
            id="newPassword"
            name="newPassword"
            class="form-control"
            placeholder="Enter new password"
            required
          />
          <span class="error-text" id="newPasswordError"
            >Password must meet the requirements below.</span
          >
        </div>

        <div class="form-group">
          <label for="confirmPassword">Confirm Password</label>
          <input
            type="password"
            id="confirmPassword"
            name="confirmPassword"
            class="form-control"
            placeholder="Confirm your password"
            required
          />
          <span class="error-text" id="confirmPasswordError"
            >Passwords do not match.</span
          >
        </div>

        <div class="password-requirements">
          <h4>Password Requirements:</h4>
          <div class="requirement" id="lengthReq">
            <i class="fas fa-circle"></i> At least 8 characters
          </div>
          <div class="requirement" id="uppercaseReq">
            <i class="fas fa-circle"></i> At least one uppercase letter
          </div>
          <div class="requirement" id="lowercaseReq">
            <i class="fas fa-circle"></i> At least one lowercase letter
          </div>
          <div class="requirement" id="numberReq">
            <i class="fas fa-circle"></i> At least one number
          </div>
          <div class="requirement" id="specialReq">
            <i class="fas fa-circle"></i> At least one special character
          </div>
        </div>

        <button type="submit" class="btn" style="margin-top: 20px">
          Reset Password
        </button>
      </form>
    </div>

    <script src="assets/js/validation.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Initialize validation for reset password form
        if (typeof initFormValidation === "function") {
          initFormValidation("resetPasswordForm");
        }

        const newPasswordInput = document.getElementById("newPassword");
        const confirmPasswordInput = document.getElementById("confirmPassword");
        const lengthReq = document.getElementById("lengthReq");
        const uppercaseReq = document.getElementById("uppercaseReq");
        const lowercaseReq = document.getElementById("lowercaseReq");
        const numberReq = document.getElementById("numberReq");
        const specialReq = document.getElementById("specialReq");

        // Check password requirements in real-time
        newPasswordInput.addEventListener("keyup", function () {
          const password = this.value;

          // Length requirement (at least 8 characters)
          if (password.length >= 8) {
            lengthReq.classList.add("valid");
            lengthReq.querySelector("i").className = "fas fa-check-circle";
          } else {
            lengthReq.classList.remove("valid");
            lengthReq.querySelector("i").className = "fas fa-circle";
          }

          // Uppercase letter requirement
          if (/[A-Z]/.test(password)) {
            uppercaseReq.classList.add("valid");
            uppercaseReq.querySelector("i").className = "fas fa-check-circle";
          } else {
            uppercaseReq.classList.remove("valid");
            uppercaseReq.querySelector("i").className = "fas fa-circle";
          }

          // Lowercase letter requirement
          if (/[a-z]/.test(password)) {
            lowercaseReq.classList.add("valid");
            lowercaseReq.querySelector("i").className = "fas fa-check-circle";
          } else {
            lowercaseReq.classList.remove("valid");
            lowercaseReq.querySelector("i").className = "fas fa-circle";
          }

          // Number requirement
          if (/[0-9]/.test(password)) {
            numberReq.classList.add("valid");
            numberReq.querySelector("i").className = "fas fa-check-circle";
          } else {
            numberReq.classList.remove("valid");
            numberReq.querySelector("i").className = "fas fa-circle";
          }

          // Special character requirement
          if (/[!@#$%^&*(),.?":{}|<>]/.test(password)) {
            specialReq.classList.add("valid");
            specialReq.querySelector("i").className = "fas fa-check-circle";
          } else {
            specialReq.classList.remove("valid");
            specialReq.querySelector("i").className = "fas fa-circle";
          }

          // Check for password match if confirm password has value
          if (confirmPasswordInput.value) {
            if (password === confirmPasswordInput.value) {
              document.getElementById("confirmPasswordError").style.display =
                "none";
            } else {
              document.getElementById("confirmPasswordError").style.display =
                "block";
            }
          }
        });

        // Check password match when confirm password is changed
        confirmPasswordInput.addEventListener("keyup", function () {
          if (this.value !== newPasswordInput.value) {
            document.getElementById("confirmPasswordError").style.display =
              "block";
          } else {
            document.getElementById("confirmPasswordError").style.display =
              "none";
          }
        });

        // Handle form submission
        document
          .getElementById("resetPasswordForm")
          .addEventListener("submit", function (event) {
            event.preventDefault();

            if (
              validateForm("resetPasswordForm") &&
              isValidPassword(newPasswordInput.value) &&
              newPasswordInput.value === confirmPasswordInput.value
            ) {
              // In a real app, you would send an AJAX request to your server
              // For demo: simulate successful password reset
              document.getElementById("successMessage").style.display = "block";
              document.getElementById("resetPasswordForm").reset();

              // Reset password requirements
              document.querySelectorAll(".requirement").forEach(function (req) {
                req.classList.remove("valid");
                req.querySelector("i").className = "fas fa-circle";
              });

              // Redirect to login page after 3 seconds
              setTimeout(function () {
                window.location.href = "login.html";
              }, 3000);
            }
          });

        function isValidPassword(password) {
          const lengthValid = password.length >= 8;
          const uppercaseValid = /[A-Z]/.test(password);
          const lowercaseValid = /[a-z]/.test(password);
          const numberValid = /[0-9]/.test(password);
          const specialValid = /[!@#$%^&*(),.?":{}|<>]/.test(password);

          return (
            lengthValid &&
            uppercaseValid &&
            lowercaseValid &&
            numberValid &&
            specialValid
          );
        }
      });
    </script>
    <style>
      .reset-password-container {
        width: 400px;
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.05);
        padding: 40px;
      }

      .form-message {
        padding: 10px 15px;
        border-radius: 8px;
        margin-bottom: 20px;
        display: none;
      }

      .form-message.success {
        background-color: rgba(76, 175, 80, 0.1);
        color: #4caf50;
        border: 1px solid rgba(76, 175, 80, 0.2);
      }

      .form-message.error {
        background-color: rgba(244, 67, 54, 0.1);
        color: #f44336;
        border: 1px solid rgba(244, 67, 54, 0.2);
      }

      .error-text {
        color: #f44336;
        font-size: 12px;
        margin-top: 5px;
        display: none;
      }

      .password-requirements {
        margin-top: 20px;
        padding: 15px;
        background-color: #f8f9fa;
        border-radius: 8px;
        font-size: 13px;
      }

      .password-requirements h4 {
        margin-top: 0;
        margin-bottom: 10px;
        font-size: 14px;
      }

      .requirement {
        display: flex;
        align-items: center;
        margin-bottom: 5px;
        color: #666;
      }

      .requirement i {
        margin-right: 8px;
        font-size: 12px;
      }

      .requirement.valid {
        color: #4caf50;
      }

      .requirement.valid i {
        color: #4caf50;
      }
    </style>
  </body>

